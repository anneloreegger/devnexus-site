#The build number is automatically generated
ting.build.number=${buildNumber}
ting.build.version=${pom.version}
class.user.email=Email
class.user.password=Password
jsp.login.button.login=Login
jsp.login.button.cancel=Cancel
jsp.login.error.errorMessage=Login failed.

cfpSubmission.bio=Bio
cfpSubmission.firstName=First Name
cfpSubmission.lastName=Last Name
cfpSubmission.picture=Picture
cfpSubmission.twitterId=Twitter Id
cfpSubmission.googlePlusId=Google Plus Id
cfpSubmission.linkedInId=LinkedIn Id
cfpSubmission.title=Presentation Title
cfpSubmission.presentationType=Presentation Type
cfpSubmission.tshirtSize=T-shirt Size
cfpSubmission.skillLevel=Skill Level
cfpSubmission.topic=Topic
cfpSubmission.description=Description
cfpSubmission.email=Email
cfpSubmission.phone=Phone

## Appfuse

# Page titles
webapp.name=AppFuse Light
webapp.tagline=Providing integration and style to open source Java frameworks.
index.title=Welcome
userList.title=User List
userForm.title=User Details

# Messages used for labels, errors and success messages
user.saved=User {0} has been saved successfully.
user.missing=No user found with this id.
user.deleted=User {0} successfully deleted.

user.id=User Id
user.firstName=First Name
user.lastName=Last Name
user.username=Username
user.password=Password
user.email=E-Mail
date.format=MM/dd/yyyy
typeMismatch.java.util.Date={0} is an invalid date.

# -- validator errors --
errors.required={0} is required.
errors.minlength={0} can not be less than {1} characters.
errors.maxlength={0} can not be greater than {1} characters.
errors.invalid={0} is invalid.

errors.byte={0} must be a byte.
errors.short={0} must be a short.
errors.integer={0} must be an integer.
errors.long={0} must be a long.
errors.float={0} must be a float.
errors.double={0} must be a double.

errors.date={0} is not a date.
errors.range={0} is not in the range {1} through {2}.
errors.creditcard={0} is an invalid credit card number.
errors.email={0} is an invalid e-mail address.

# -- validator

javax.validation.constraints.AssertFalse.message = {0} must be false
javax.validation.constraints.AssertTrue.message  = {0} must be true
javax.validation.constraints.DecimalMax.message  = {0} must be less than ${inclusive == true ? 'or equal to ' : ''}{value}
javax.validation.constraints.DecimalMin.message  = {0} must be greater than ${inclusive == true ? 'or equal to ' : ''}{value}
javax.validation.constraints.Digits.message      = {0} numeric value out of bounds (<{integer} digits>.<{fraction} digits> expected)
javax.validation.constraints.Future.message      = {0} must be in the future
javax.validation.constraints.Max.message         = {0} must be less than or equal to {value}
javax.validation.constraints.Min.message         = {0} must be greater than or equal to {value}
javax.validation.constraints.NotNull.message     = {0} may not be null
javax.validation.constraints.Null.message        = {0} must be null
javax.validation.constraints.Past.message        = {0} must be in the past
javax.validation.constraints.Pattern.message     = {0} must match "{regexp}"
javax.validation.constraints.Size.message        = size of {0} must be between {min} and {max}

org.hibernate.validator.constraints.CreditCardNumber.message = invalid credit card number
org.hibernate.validator.constraints.Email.message            = {0} is not a well-formed email address
org.hibernate.validator.constraints.Length.message           = length must be between {min} and {max}
org.hibernate.validator.constraints.NotBlank.message         = {0} may not be empty
org.hibernate.validator.constraints.NotEmpty.message         = {0} may not be empty
org.hibernate.validator.constraints.Range.message            = {0} must be between {min} and {max}
org.hibernate.validator.constraints.SafeHtml.message         = {0} may have unsafe html content
org.hibernate.validator.constraints.ScriptAssert.message     = script expression "{script}" didn't evaluate to true
org.hibernate.validator.constraints.URL.message              = {0} must be a valid URL
org.hibernate.validator.constraints.br.CNPJ.message          = invalid Brazilian corporate taxpayer registry number (CNPJ)
org.hibernate.validator.constraints.br.CPF.message           = invalid Brazilian individual taxpayer registry number (CPF)
org.hibernate.validator.constraints.br.TituloEleitor.message = invalid Brazilian Voter ID card number

NotEmpty.speakers.phone = Please provide a phone number
NotEmpty.speakers[0].phone = 1st speaker: Please provide a phone number
NotEmpty.speakers[1].phone = 1st speaker: Please provide a phone number
NotEmpty.speakers[2].phone = 1st speaker: Please provide a phone number
NotEmpty.speakers.email = Please provide an email
NotEmpty.speakers[0].email = 1st speaker: Please provide an email
NotEmpty.speakers[1].email = 2nd speaker: Please provide an email
NotEmpty.speakers[2].email = 3rd speaker: Please provide an email

NotEmpty.speakers.firstName = Please provide a first name
NotEmpty.speakers[0].firstName = 1st speaker: Please provide a first name
NotEmpty.speakers[1].firstName = 2nd speaker: Please provide a first name
NotEmpty.speakers[2].firstName = 3rd speaker: Please provide a first name

NotEmpty.speakers.bio = Please provide a bio
NotEmpty.speakers[0].bio = 1st speaker: Please provide a bio
NotEmpty.speakers[1].bio = 2nd speaker: Please provide a bio
NotEmpty.speakers[2].bio = 3rd speaker: Please provide a bio

NotEmpty.speakers.lastName = Please provide a last name
NotEmpty.speakers[0].lastName = 1st speaker: Please provide a last name
NotEmpty.speakers[1].lastName = 2nd speaker: Please provide a last name
NotEmpty.speakers[2].lastName = 3rd speaker: Please provide a last name

NotEmpty.speakers.tshirtSize = Please provide a T-shirt size
NotEmpty.speakers[0].tshirtSize = 1st speaker: Please provide a T-shirt size
NotEmpty.speakers[1].tshirtSize = 2nd speaker: Please provide a T-shirt size
NotEmpty.speakers[2].tshirtSize = 3rd speaker: Please provide a T-shirt size

NotEmpty.speakers.location = Please provide a location
NotEmpty.speakers[0].location = 1st speaker: Please provide a location
NotEmpty.speakers[1].location = 2nd speaker: Please provide a location
NotEmpty.speakers[2].location = 3rd speaker: Please provide a location

# -- buttons

button.add=Add
button.cancel=Cancel
button.delete=Delete
button.done=Done
button.save=Save
button.search=Search
